{
    "openapi": "3.0.0",
    "info": {
        "title": "My First API",
        "version": "0.1"
    },
    "paths": {
        "/api/customer/bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get list of bookings",
                "description": "Returns list of bookings with pagination",
                "operationId": "getBookingsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Booking"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Store a new booking",
                "description": "Creates a new booking record",
                "operationId": "storeBooking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Booking created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/customer/bookings/{id}": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get booking information",
                "description": "Returns booking data by ID",
                "operationId": "getBookingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Update booking information",
                "description": "Updates booking data by ID",
                "operationId": "updateBooking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Booking updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Booking"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Delete booking",
                "description": "Deletes booking by ID",
                "operationId": "deleteBooking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    }
                }
            }
        },
        "/api/customer/car-brands": {
            "get": {
                "tags": [
                    "Car Brands"
                ],
                "summary": "Get list of car brands",
                "description": "Returns list of car brands with pagination",
                "operationId": "getCarBrandsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CarBrand"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Get list of cars",
                "description": "Returns list of cars with pagination",
                "operationId": "getCarsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Car"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Store a new car",
                "description": "Creates a new car record",
                "operationId": "storeCar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/customer/cars/{id}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Get car information",
                "description": "Returns car data by ID",
                "operationId": "getCarById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cars"
                ],
                "summary": "Update car information",
                "description": "Updates car data by ID",
                "operationId": "updateCar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cars"
                ],
                "summary": "Delete car",
                "description": "Deletes car by ID",
                "operationId": "deleteCar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Car deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found"
                    }
                }
            }
        },
        "/api/customer/car-engines": {
            "get": {
                "tags": [
                    "Car Engines"
                ],
                "summary": "Get list of car engines",
                "description": "Returns list of car engines with pagination",
                "operationId": "getCarEnginesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CarEngine"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/car-offers": {
            "get": {
                "tags": [
                    "Car Offers"
                ],
                "summary": "Get list of car offers",
                "description": "Returns list of car offers with pagination",
                "operationId": "getCarOffersList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CarOffer"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Car Offers"
                ],
                "summary": "Store a new car offer",
                "description": "Creates a new car offer record",
                "operationId": "storeCarOffer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarOfferRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car offer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarOffer"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/customer/car-offers/{id}": {
            "get": {
                "tags": [
                    "Car Offers"
                ],
                "summary": "Get car offer information",
                "description": "Returns car offer data by ID",
                "operationId": "getCarOfferById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car offer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarOffer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car offer not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Car Offers"
                ],
                "summary": "Update car offer information",
                "description": "Updates car offer data by ID",
                "operationId": "updateCarOffer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car offer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarOfferRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car offer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CarOffer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car offer not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Car Offers"
                ],
                "summary": "Delete car offer",
                "description": "Deletes car offer by ID",
                "operationId": "deleteCarOffer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Car offer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car offer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Car offer deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car offer not found"
                    }
                }
            }
        },
        "/api/customer/car-types": {
            "get": {
                "tags": [
                    "Car Types"
                ],
                "summary": "Get list of car types",
                "description": "Returns list of car types with pagination",
                "operationId": "getCarTypesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CarType"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/stores": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get list of stores",
                "description": "Returns list of stores with pagination",
                "operationId": "getStoresList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Store"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Store a new store",
                "description": "Creates a new store record",
                "operationId": "storeStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/customer/stores/{id}": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get store information",
                "description": "Returns store data by ID",
                "operationId": "getStoreById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Stores"
                ],
                "summary": "Update store information",
                "description": "Updates store data by ID",
                "operationId": "updateStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Delete store",
                "description": "Deletes store by ID",
                "operationId": "deleteStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Store deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BookingRequest": {
                "title": "Booking Request",
                "description": "Booking request data",
                "required": [
                    "car_id",
                    "user_id",
                    "start_date",
                    "end_date",
                    "total_price",
                    "status"
                ],
                "properties": {
                    "car_id": {
                        "description": "ID of the car to book",
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "ID of the user making the booking",
                        "type": "integer",
                        "example": 1
                    },
                    "start_date": {
                        "description": "Booking start date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T10:00:00Z"
                    },
                    "end_date": {
                        "description": "Booking end date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-03T10:00:00Z"
                    },
                    "total_price": {
                        "description": "Total price for the booking",
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "status": {
                        "description": "Booking status",
                        "type": "string",
                        "enum": [
                            "pending",
                            "confirmed",
                            "cancelled",
                            "completed"
                        ],
                        "example": "confirmed"
                    },
                    "notes": {
                        "description": "Additional notes",
                        "type": "string",
                        "example": "Customer requested early pickup",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CarRequest": {
                "title": "Car Request",
                "description": "Car request data",
                "required": [
                    "car_brand_id",
                    "car_type_id",
                    "store_id",
                    "model",
                    "year",
                    "color",
                    "seats",
                    "transmission",
                    "fuel_type"
                ],
                "properties": {
                    "car_brand_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "car_type_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "model": {
                        "type": "string",
                        "example": "Civic"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2020
                    },
                    "color": {
                        "type": "string",
                        "example": "blue"
                    },
                    "seats": {
                        "type": "integer",
                        "example": 5
                    },
                    "transmission": {
                        "type": "string",
                        "enum": [
                            "manual",
                            "automatic"
                        ]
                    },
                    "fuel_type": {
                        "type": "string",
                        "enum": [
                            "petrol",
                            "diesel",
                            "electric",
                            "hybrid"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "example": "A reliable car for daily use"
                    },
                    "image_urls": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                },
                "type": "object"
            },
            "CarOfferRequest": {
                "title": "Car Offer Request",
                "description": "Car offer request data",
                "required": [
                    "car_id",
                    "title",
                    "discount_percentage",
                    "start_date",
                    "end_date"
                ],
                "properties": {
                    "car_id": {
                        "description": "ID of the car for the offer",
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "description": "Offer title",
                        "type": "string",
                        "example": "Summer Sale"
                    },
                    "description": {
                        "description": "Offer description",
                        "type": "string",
                        "example": "Get 20% off on all cars this summer",
                        "nullable": true
                    },
                    "discount_percentage": {
                        "description": "Discount percentage (0-100)",
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "start_date": {
                        "description": "Offer start date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-01T00:00:00Z"
                    },
                    "end_date": {
                        "description": "Offer end date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-31T23:59:59Z"
                    },
                    "is_active": {
                        "description": "Whether the offer is active",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "StoreRequest": {
                "title": "Store Request",
                "description": "Store request data",
                "required": [
                    "name",
                    "store_username"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Downtown Car Rental"
                    },
                    "store_username": {
                        "type": "string",
                        "example": "downtown_rental"
                    },
                    "description": {
                        "type": "string",
                        "example": "Premium car rental service"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "email": {
                        "type": "string",
                        "example": "info@downtown.com"
                    }
                },
                "type": "object"
            },
            "Booking": {
                "title": "Booking",
                "description": "Booking model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "car_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T10:00:00Z"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-03T10:00:00Z"
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "example": 150
                    },
                    "status": {
                        "type": "string",
                        "example": "confirmed"
                    },
                    "notes": {
                        "type": "string",
                        "example": "Customer requested early pickup",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "car": {
                        "$ref": "#/components/schemas/Car"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Car": {
                "title": "Car",
                "description": "Car model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "car_brand_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "car_type_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "model": {
                        "type": "string",
                        "example": "Civic"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2020
                    },
                    "color": {
                        "type": "string",
                        "example": "blue"
                    },
                    "seats": {
                        "type": "integer",
                        "example": 5
                    },
                    "transmission": {
                        "type": "string",
                        "example": "automatic"
                    },
                    "fuel_type": {
                        "type": "string",
                        "example": "petrol"
                    },
                    "description": {
                        "type": "string",
                        "example": "A reliable car for daily use"
                    },
                    "image_urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "car_brand": {
                        "$ref": "#/components/schemas/CarBrand"
                    },
                    "car_type": {
                        "$ref": "#/components/schemas/CarType"
                    },
                    "car_engine": {
                        "$ref": "#/components/schemas/CarEngine"
                    },
                    "store": {
                        "$ref": "#/components/schemas/Store"
                    }
                },
                "type": "object"
            },
            "CarBrand": {
                "title": "Car Brand",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Honda"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CarEngine": {
                "title": "Car Engine",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "1.5L Turbo"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CarOffer": {
                "title": "Car Offer",
                "description": "Car offer model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "car_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Summer Sale"
                    },
                    "description": {
                        "type": "string",
                        "example": "Get 20% off on all cars this summer"
                    },
                    "discount_percentage": {
                        "type": "number",
                        "format": "float",
                        "example": 20
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-01T00:00:00Z"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-08-31T23:59:59Z"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "car": {
                        "$ref": "#/components/schemas/Car"
                    }
                },
                "type": "object"
            },
            "CarType": {
                "title": "Car Type",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Sedan"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Store": {
                "title": "Store",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Downtown Car Rental"
                    },
                    "store_username": {
                        "type": "string",
                        "example": "downtown_rental"
                    },
                    "description": {
                        "type": "string",
                        "example": "Premium car rental service"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "email": {
                        "type": "string",
                        "example": "info@downtown.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "store": {
                        "$ref": "#/components/schemas/Store"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Bookings",
            "description": "API Endpoints for booking management"
        },
        {
            "name": "Car Brands",
            "description": "API Endpoints for car brand management"
        },
        {
            "name": "Cars",
            "description": "API Endpoints for car management"
        },
        {
            "name": "Car Engines",
            "description": "API Endpoints for car engine management"
        },
        {
            "name": "Car Offers",
            "description": "API Endpoints for car offer management"
        },
        {
            "name": "Car Types",
            "description": "API Endpoints for car type management"
        },
        {
            "name": "Stores",
            "description": "API Endpoints for store management"
        }
    ]
}
